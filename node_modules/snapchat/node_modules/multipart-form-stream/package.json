{
  "author": {
    "name": "Ian Hansen",
    "email": "ian@supershabam.com",
    "url": "http://supershabam.com"
  },
  "name": "multipart-form-stream",
  "description": "transform files and fields into a multipart/form-data encoded stream",
  "version": "0.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/supershabam/multipart-form-stream.git"
  },
  "main": "index.js",
  "dependencies": {
    "mime": "~1.2.7"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "multipart-form-stream\n=====================\n\ntransform files and parameters into a multipart/form-data encoded stream\n\n## Example\n```javascript\nvar MultipartStream = require('multipart-form-stream')\n  , request = require('request')\n  , stream\n  ;\n\nstream = new MultipartStream({\n  boundary: 'customMultipartBoundary' // optional\n});\n\n// add a normal field parameter\nstream.addField('param1', 'value');\n\n// add a file \n// addFile(field, path, [filename - defaults to filename in path])\nstream.addFile('file1', '/path/to/file.png', 'thefile.png');\n\n// add a stream\n// addStream(field, filename, mimeType, stream)\nstream.addStream('stream1', 'thefilename.png', 'image/png', imagestream);\n\n// do something useful with this stream\n// let's pipe it to transloadit!\n// make sure you set the Content-Type header\nstream.pipe(request.post({\n  uri: 'http://api2.transloadit.com/assemblies',\n  headers: {\n    'Content-Type': 'multipart/form-data; boundary=' + stream.getBoundary()\n  }\n}));\n\n// enjoy streaming\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/supershabam/multipart-form-stream/issues"
  },
  "homepage": "https://github.com/supershabam/multipart-form-stream",
  "_id": "multipart-form-stream@0.0.0",
  "dist": {
    "shasum": "974f043e7081acbffe0b9fbd1ff6e54072b8a35e"
  },
  "_from": "multipart-form-stream@*",
  "_resolved": "https://registry.npmjs.org/multipart-form-stream/-/multipart-form-stream-0.0.0.tgz"
}
